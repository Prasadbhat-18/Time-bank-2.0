rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles: users can read/write their own doc
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Skills readable to authenticated users
    match /skills/{document} {
      allow read: if request.auth != null;
    }

    // Services readable to authenticated users, and write access to provider only
    match /services/{serviceId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && request.resource.data.provider_id == request.auth.uid;
    }

    // Chats: only two participants can read/write the chat and its messages
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;

      match /messages/{messageId} {
        allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }

    // Fallback for other collections in this prototype: authenticated users can read
    match /{collection}/{document} {
      allow read: if request.auth != null;
    }
  }
}
